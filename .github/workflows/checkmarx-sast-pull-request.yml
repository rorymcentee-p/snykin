# This is a basic workflow to create GitHub Issues using the Checkmarx CxFlow GitHub Action.  It runs on a push to the main branch.
#
# The following GitHub Secrets must be first defined:
#   - CHECKMARX_URL
#   - CHECKMARX_USER
#   - CHECKMARX_PASSWORD
#   - CHECKMARX_CLIENT_SECRET
#   - GH_TOKEN
#
# Update the 'team' field to reflect the team name used in Checkmarx.
#
# For full documentation, including a list of all inputs, please refer to the README https://github.com/checkmarx-ts/checkmarx-cxflow-github-action

name: CxFlow-GitHub-Issue-PR

# Controls when the action will run. Triggers the workflow on push or pull request events but only for the master branch
on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches:
      - master
      - main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel - this job is specifically configured to use the Checkmarx CxFlow Action
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on - Ubuntu is required as Docker is leveraged for the action
    runs-on: ubuntu-latest
    environment:
      name: Security Testing

    # Steps require - checkout code, run CxFlow Action, Upload SARIF report (optional)
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Checkout
    - uses: actions/checkout@v2
    - name: Checkmarx SAST CxFlow Action
      uses: checkmarx-ts/checkmarx-cxflow-github-action@v1.1
      with:
        project: Snykin
        team: /CxServer
        checkmarx_url: ${{ secrets.CHECKMARX_URL }}  # To be stored in GitHub Secrets.
        checkmarx_username: ${{ secrets.CHECKMARX_USERNAME }}  # To be stored in GitHub Secrets.
        checkmarx_password: ${{ secrets.CHECKMARX_PASSWORD }}  # To be stored in GitHub Secrets.
        checkmarx_client_secret: ${{ secrets.CHECKMARX_CLIENT_SECRET }}  # To be stored in GitHub Secrets.
        github_token: ${{secrets.GH_TOKEN}}  # To be stored in GitHub Secrets.
        incremental: true
        break_build: true
        scanners: sast
        bug_tracker: NONE
        params: --checkmarx.scan-preset=High and Medium --cxflow.enabled-vulnerability-scanners=sast --checkmarx.incremental=true --namespace=${{ github.repository_owner }} --repo-name=${{ github.event.repository.name }}  --branch=${{ github.ref }} --merge-id=${{ github.event.number }}
    - name: Checkmarx SCA CxFlow Action
      uses: checkmarx-ts/checkmarx-cxflow-github-action@v1.1 # GitHub Action version
      with:
        project: rorymcentee-p/snykin  # <-- Insert Checkmarx CxSCA Project Name
        sca_api_url: https://api.scacheckmarx.com
        sca_app_url: https://sca.scacheckmarx.com
        sca_access_control_url: https://platform.checkmarx.net
        sca_tenant: protego  # <-- Insert Checkmarx CxSCA Tenant
        sca_username: ${{ secrets.CHECKMARX_SCA_USERNAME }} # To be stored in GitHub Secrets.
        sca_password: ${{ secrets.CHECKMARX_SCA_PASSWORD }} # To be stored in GitHub Secrets.
        break_build: true
        scanners: sca
        params: --namespace=${{ github.repository_owner }} --repo-name=${{ github.event.repository.name }} --branch=${{ github.ref }} --repo-url="<GitHubRepoUrl>"
